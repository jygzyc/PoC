package fun.lilac.exploit.poc;

import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Context;
import android.content.ContextWrapper;
import android.content.Intent;
import android.os.Build;
import android.os.Bundle;
import android.os.Environment;
import android.provider.Settings;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

import com.elvishew.xlog.XLog;

import java.io.File;
import java.io.FileWriter;
import java.util.List;
import java.util.Map;

import fun.lilac.exploit.Constants;
import fun.lilac.exploit.R;
import fun.lilac.exploit.fuzz.BinderFuzz;
import fun.lilac.exploit.utils.SerivceUtil;
import fun.lilac.exploit.utils.ServiceInfo;
import fun.lilac.exploit.utils.XLogUtil;

public class BinderFuzzActivity extends AppCompatActivity implements View.OnClickListener{
    private static final String TAG = "BinderFuzzActivity";
    Button writeServiceInfo2File;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_binder_fuzz);
        initView();
    }

    @Override
    public void onClick(View view) {
        switch (view.getId()){
            case R.id.btn_write_to_file:
                new Thread(new Runnable() {
                    @Override
                    public void run() {
                        testBlackService("adb");
                    }
                }).start();
                Toast.makeText(Constants.mContext,
                        "请在/sdcard/Android/data/fun.lilac.exploit/files/Download/ServiceInfoList.csv中查看结果",
                        Toast.LENGTH_SHORT).show();
                break;
            default:
                Toast.makeText(Constants.mContext, "......", Toast.LENGTH_SHORT);
                break;
        }
    }

    public void initView(){
        Constants.mContext = this.getApplicationContext();
        XLogUtil.initXLog(TAG);
        writeServiceInfo2File = findViewById(R.id.btn_write_to_file);
        writeServiceInfo2File.setOnClickListener(this);
    }

    private void setWriteServiceInfo2File(){
        BinderFuzz binderFuzz = new BinderFuzz();
        String csvString = "";
        FileWriter fileWriter = null;
        try{
            List<ServiceInfo> serviceInfoList = binderFuzz.getServiceInfoList();
            for(ServiceInfo serviceInfo : serviceInfoList){
                String serviceName = serviceInfo.getServiceName();
                String interfaceDescriptor = SerivceUtil.getInterfaceDescriptor(serviceName);
                if(interfaceDescriptor != null){
                    if(serviceInfo.getMethodInfo() != null){
                        if(serviceInfo.getMethodInfo().size() != 0) {
                            for (Map.Entry<Integer, List<String>> entry : serviceInfo.getMethodInfo().entrySet()) {
                                csvString += serviceName + "," + interfaceDescriptor + "," +
                                        entry.getKey() + "," + entry.getValue().get(0) + "," +
                                        entry.getValue().get(1) + "," + entry.getValue().get(2) + "\n";
                            }
                        }else{
                            csvString += serviceName + "," + interfaceDescriptor + "\n";
                        }
                    }else {
                        csvString += serviceName + "," +  interfaceDescriptor + "\n";
                    }
                }else{
                    csvString += serviceName + "\n";
                }
            }

            ContextWrapper cw = new ContextWrapper(Constants.mContext);
            String path = cw.getExternalFilesDir(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath();
            String packagesPath = path + File.separator + "ServiceInfoList.csv";
            File packageFile = new File(packagesPath);
            if(packageFile.exists()){
                packageFile.delete();
            }
            fileWriter = new FileWriter(packageFile, false);
            fileWriter.write(csvString);
            fileWriter.close();
        }catch (Exception e){
            e.printStackTrace();
        }finally {
            if(fileWriter != null){
                try{
                    fileWriter.close();
                }catch (Exception e){
                    e.printStackTrace();
                }
            }
        }
    }

    public void testBlackService(String serviceName){
        ServiceInfo serviceInfo = SerivceUtil.getServiceInfo(serviceName);
    }

//    private void testAllFiles() {
//        //运行设备>=Android 11.0
//        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R) {
//            //检查是否已经有权限
//            if (!Environment.isExternalStorageManager()) {
//                //跳转新页面申请权限
//                startActivityForResult(new Intent(Settings.ACTION_MANAGE_ALL_FILES_ACCESS_PERMISSION), 101);
//            }
//        }
//    }
//
//    @Override
//    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
//        super.onActivityResult(requestCode, resultCode, data);
//        //申请权限结果
//        if (requestCode == 101) {
//            if (Environment.isExternalStorageManager()) {
//                Toast.makeText(Constants.mContext, "访问所有文件权限申请成功", Toast.LENGTH_SHORT).show();
//
//                //遍历目录
//                showAllFiles();
//            }
//        }
//    }
//
//
//    private void showAllFiles() {
//        File file = Environment.getExternalStorageDirectory();
//        File[] list = file.listFiles();
//        for (int i = 0; i < list.length; i++) {
//            String name = list[i].getName();
//            XLog.d("test", "fileName:" + name);
//        }
//    }
}